# Komodo + FerretDB + Postgres + Cloudflare Tunnel + Watchtower
version: "3.8"

networks:
  infra_net:
    driver: bridge

volumes:
  postgres-data:
  ferretdb-state:
  komodo-backups:

services:
  postgres:
    image: ghcr.io/ferretdb/postgres-documentdb
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "${KOMODO_DB_USERNAME}"
      POSTGRES_PASSWORD: "${KOMODO_DB_PASSWORD}"
      POSTGRES_DB: postgres
    networks:
      - infra_net
    labels:
      komodo.skip: "true"

  ferretdb:
    image: ghcr.io/ferretdb/ferretdb
    restart: unless-stopped
    depends_on:
      - postgres
    volumes:
      - ferretdb-state:/state
    environment:
      FERRETDB_POSTGRESQL_URL: "postgres://${KOMODO_DB_USERNAME}:${KOMODO_DB_PASSWORD}@postgres:5432/postgres"
    networks:
      - infra_net
    labels:
      komodo.skip: "true"

  core:
    image: ghcr.io/moghtech/komodo-core:${COMPOSE_KOMODO_IMAGE_TAG:-latest}
    restart: unless-stopped
    depends_on:
      - ferretdb
    ports:
      - "9120:9120" # Komodo web UI
    env_file: ./compose.env
    environment:
      KOMODO_DATABASE_ADDRESS: "ferretdb:27017"
      KOMODO_DATABASE_USERNAME: "${KOMODO_DB_USERNAME}"
      KOMODO_DATABASE_PASSWORD: "${KOMODO_DB_PASSWORD}"
    volumes:
      - komodo-backups:${COMPOSE_KOMODO_BACKUPS_PATH:-/etc/komodo/backups}
    networks:
      - infra_net
    labels:
      komodo.skip: "true"

  periphery:
    image: ghcr.io/moghtech/komodo-periphery:${COMPOSE_KOMODO_IMAGE_TAG:-latest}
    restart: unless-stopped
    env_file: ./compose.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc:/proc
      - ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}:${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}
    networks:
      - infra_net
    labels:
      komodo.skip: "true"

  cloudflared:
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: tunnel run
    env_file: ./compose.env
    environment:
      TUNNEL_TOKEN: "${CLOUDFLARE_TUNNEL_TOKEN}"
      TUNNEL_NAME: "${CLOUDFLARE_TUNNEL_NAME:-komodo-tunnel}"
    networks:
      - infra_net
    volumes:
      - ./cloudflared:/etc/cloudflared
    labels:
      komodo.skip: "true"

  watchtower:
    image: containrrr/watchtower:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - infra_net
    environment:
      WATCHTOWER_CLEANUP: "true"          # remove old images after update
      WATCHTOWER_POLL_INTERVAL: "300"     # check every 5 minutes
      WATCHTOWER_INCLUDE_RESTARTING: "true"
      WATCHTOWER_INCLUDE_STOPPED: "true"
    labels:
      komodo.skip: "true"
